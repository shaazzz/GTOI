Problem Description
===================

In this chapter, we deal with a rooted tree and examine the following two problems on this tree.

Ancestor at Specific Height Problem
-----------------------------------

In this problem, a rooted tree with
n
vertices is given as input, and then
q
queries are made. In each query, a vertex like v and a number like
h
are given. It is guaranteed that the height of the vertex is greater than
h
, and we are asked for the ancestor of vertex
v
that is located at height
h
(which is unique).

Lowest Common Ancestor Problem
-------------------------------

In this problem, a rooted tree with
n
vertices is given as input, and then
q
queries are made. In each query, two vertices like
v and u
are given to us, and we are asked for the lowest common ancestor
of these two vertices.
The lowest common ancestor of two vertices is generally called
LCA
, which stands for
Lowest Common Ancestor
.

Relationship Between These Two Problems
---------------------------------------

If we have a solution for the first problem that answers each query in
:math:`O(x)`
time, we can answer each query of the second problem in
:math:`O(x * lg(n))`
time.

Consider the LCA of these two vertices. The ancestors that are above the height of that vertex
are common, and the lower ancestors are different. Thus, we can
perform a binary search on the height. To check whether the ancestor at height x of these two vertices
is common or not, it is sufficient to obtain the ancestor at height
x
of both vertices using the first method and compare whether they are the same or not.
