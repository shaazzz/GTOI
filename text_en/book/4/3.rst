گراف و جادو
=======================

Sometimes, combinatorial problems are modeled as graphs with very attractive ideas. In the realm of graphs, with the powerful tools we possess (theorems and good intuition on graphs), problems can be solved easily.

In this section, we intend to introduce you to the magic of modeling with graphs through a few examples!

درخت؟
------------

Let :math:`S` be the set of numbers from 1 to :math:`n`, and consider :math:`n` distinct subsets :math:`A_1,A_2,...,A_n` of :math:`S`. Prove that there exists a number :math:`x` such that if we remove :math:`x` from all :math:`A_i`, the resulting subsets :math:`A_i` remain distinct.

جواب
~~~~~~~~~~

When does removing a number like :math:`x` from the sets cause two sets to become equal? Only when there exist two sets, say :math:`A_i` and :math:`A_j`, whose only difference is :math:`x`. That is, all numbers except :math:`x` are either present in both or absent from both.

Now we model the problem as a graph in the following way: we consider :math:`n` vertices, each representing one of the :math:`A_i`s. Draw an edge with weight :math:`w` between two vertices :math:`u,v` if the only difference between :math:`A_u` and :math:`A_v` is the element :math:`w`. The problem is now equivalent to proving that there exists a weight that is not used among the edges!

According to our graph modeling, each time we traverse an edge with weight :math:`w`, element :math:`w` is either removed from or added to our current set. Therefore, in any closed walk, each weight must appear an even number of times (because the presence or absence status of each element must change an even number of times to return to the original set after traversing the walk).

Now, assume by contradiction that for every weight, there is at least one edge with that weight. So, for each weight, select an arbitrary edge with that weight and form a graph :math:`G` with :math:`n` edges.

First, it is clear that graph :math:`G` has no cycles. Because if there were a cycle, each weight would have to appear an even number of times, which is impossible since we have exactly one edge for each weight. Therefore, :math:`G` must be a forest. On the other hand, we stated that :math:`G` has exactly :math:`n` edges, and we know this is impossible (because the maximum number of edges in a forest corresponds to a tree, which has :math:`n-1` edges).

Therefore, we can conclude from the resulting contradiction that there is a weight that does not appear among the edges, which proves our claim.

مثلث ها؟
--------------

Assume :math:`S` is a set with :math:`2^n+1` elements, and :math:`f({x,y})` is a function whose input is a two-element subset of :math:`S` and whose output is a number between 0 and :math:`2^{n-1}-1`. We also know that for any three distinct elements :math:`x,y,z` from :math:`S`, one of :math:`f({x,y}), f({x,z}), f({y,z})` is equal to the sum of the other two. You must prove that there exist :math:`x,y,z` such that :math:`f({x,y}), f({x,z}), f({y, z})` are all equal to 0.